{"ast":null,"code":"var _jsxFileName = \"/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Landed In Brooklyn',\n    artist: 'Khantrast',\n    album: 'Landed In Brooklyn',\n    id: 1\n  }, {\n    name: 'The Largest',\n    artist: 'BigXthaPlug',\n    album: 'TAKE CARE',\n    id: 2\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: 'Mutt',\n    artist: 'Leon Thomas',\n    album: 'Mutt',\n    id: 3\n  }, {\n    name: 'On My Mama',\n    artist: 'Victoria Monét',\n    album: 'On My Mama',\n    id: 4\n  }]);\n  const addTrack = track => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n  const removeTrack = track => {\n    const existingTracks = playlistTracks.filter(t => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3+SbCftbaKHa0B3j/Z9ky6yzrgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","SearchBar","SearchResults","Playlist","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTracks","find","t","newTrack","concat","console","log","removeTrack","filter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","userSearchResults","onAdd","onRemove","_c","$RefreshReg$"],"sources":["/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: 'Landed In Brooklyn',\n      artist: 'Khantrast',\n      album: 'Landed In Brooklyn',\n      id: 1\n    },\n    {\n      name: 'The Largest',\n      artist: 'BigXthaPlug',\n      album: 'TAKE CARE',\n      id: 2\n    }]\n  );\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState(\n    [\n      {\n        name: 'Mutt',\n        artist: 'Leon Thomas',\n        album: 'Mutt',\n        id: 3\n      },\n      {\n        name: 'On My Mama',\n        artist: 'Victoria Monét',\n        album: 'On My Mama',\n        id: 4\n      }]\n  );\n\n  const addTrack = (track) => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks){\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n\n  const removeTrack = (track) => {\n    const existingTracks = playlistTracks.filter((t) => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n\n\n  }\n\n  return (\n    <div>\n      <h1>Ja<span className='highlight'>mmm</span>ing</h1>\n      <div className='App'>\n        {/* <!-- Add search bar component-->  */}\n        <SearchBar />\n        <div className='App-playlist'>\n          {/* <!-- Add search results component--> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack}/>\n          {/* <!-- Add Playlist  component--> */}\n          <Playlist playlistName={playlistName} playlistTracks={playlistTracks} onRemove={removeTrack}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
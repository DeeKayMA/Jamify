{"ast":null,"code":"const clientID = 'd1b12a276aef41b4b58625d1d644e9e8';\nconst redirectUrl = \"http://localhost:3000\";\nlet accessToken;\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;\n      window.location = redirect;\n    }\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: 'Get',\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        console.error('Response error');\n      }\n      return jsonResponse.tracks.items.map(t => ({\n        id: t.id,\n        name: t.name,\n        artist: t.artists[0].name,\n        album: t.album.name,\n        uri: t.uri\n      }));\n    });\n  }\n};\nexport { Spotify };","map":{"version":3,"names":["clientID","redirectUrl","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","json","jsonResponse","tracks","console","error","items","map","t","id","name","artist","artists","album","uri"],"sources":["/Users/diquankerr/Desktop/Projetcs/jamming/src/util/Spotify/Spotify.js"],"sourcesContent":["const clientID = 'd1b12a276aef41b4b58625d1d644e9e8';\nconst redirectUrl = \"http://localhost:3000\";\nlet accessToken;\n\nconst Spotify = {\n    getAccessToken() {\n        if (accessToken) {\n            return accessToken;\n        }\n\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n        if (accessTokenMatch && expiresInMatch) {\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n\n            window.setTimeout(() => (accessToken = ''), expiresIn * 1000);\n\n            window.history.pushState('Access Token', null, '/');\n            return accessToken;\n        } else {\n\n            const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`\n            window.location = redirect;\n        }\n    },\n\n    search(term) {\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            method: 'Get',\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            }\n        }).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if (!jsonResponse.tracks) {\n                console.error('Response error');\n            }\n            return jsonResponse.tracks.items.map(t => ({\n                id: t.id,\n                name: t.name,\n                artist: t.artists[0].name,\n                album: t.album.name,\n                uri: t.uri,\n            }))\n        })\n    },\n};\n\n\n\nexport { Spotify } "],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,uBAAuB;AAC3C,IAAIC,WAAW;AAEf,MAAMC,OAAO,GAAG;EACZC,cAAcA,CAAA,EAAG;IACb,IAAIF,WAAW,EAAE;MACb,OAAOA,WAAW;IACtB;IAEA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IAC3E,MAAMC,cAAc,GAAGJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEvE,IAAIJ,gBAAgB,IAAIK,cAAc,EAAE;MACpCR,WAAW,GAAGG,gBAAgB,CAAC,CAAC,CAAC;MACjC,MAAMM,SAAS,GAAGC,MAAM,CAACF,cAAc,CAAC,CAAC,CAAC,CAAC;MAE3CJ,MAAM,CAACO,UAAU,CAAC,MAAOX,WAAW,GAAG,EAAG,EAAES,SAAS,GAAG,IAAI,CAAC;MAE7DL,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,GAAG,CAAC;MACnD,OAAOb,WAAW;IACtB,CAAC,MAAM;MAEH,MAAMc,QAAQ,GAAG,oDAAoDhB,QAAQ,kEAAkEC,WAAW,EAAE;MAC5JK,MAAM,CAACC,QAAQ,GAAGS,QAAQ;IAC9B;EACJ,CAAC;EAEDC,MAAMA,CAACC,IAAI,EAAE;IACT,MAAMhB,WAAW,GAAGC,OAAO,CAACC,cAAc,CAAC,CAAC;IAC5C,OAAOe,KAAK,CAAC,kDAAkDD,IAAI,EAAE,EAAE;MACnEE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUpB,WAAW;MACxC;IACJ,CAAC,CAAC,CAACqB,IAAI,CAACC,QAAQ,IAAI;MAChB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAACF,IAAI,CAACG,YAAY,IAAI;MACpB,IAAI,CAACA,YAAY,CAACC,MAAM,EAAE;QACtBC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACA,OAAOH,YAAY,CAACC,MAAM,CAACG,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;QACvCC,EAAE,EAAED,CAAC,CAACC,EAAE;QACRC,IAAI,EAAEF,CAAC,CAACE,IAAI;QACZC,MAAM,EAAEH,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI;QACzBG,KAAK,EAAEL,CAAC,CAACK,KAAK,CAACH,IAAI;QACnBI,GAAG,EAAEN,CAAC,CAACM;MACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;AACJ,CAAC;AAID,SAASnC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([{\n    name: 'Landed In Brooklyn',\n    artist: 'Khantrast',\n    album: 'Landed In Brooklyn',\n    id: 1\n  }, {\n    name: 'The Largest',\n    artist: 'BigXthaPlug',\n    album: 'TAKE CARE',\n    id: 2\n  }]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([{\n    name: 'Mutt',\n    artist: 'Leon Thomas',\n    album: 'Mutt',\n    id: 3\n  }, {\n    name: 'On My Mama',\n    artist: 'Victoria Monét',\n    album: 'On My Mama',\n    id: 4\n  }]);\n  const addTrack = track => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n  const removeTrack = track => {\n    const existingTracks = playlistTracks.filter(t => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n  };\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n  const savePlaylist = () => {\n    const trackURIs = playlistTracks.map(t => t.uri);\n  };\n  const search = term => {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"mmm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), \"ing\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3+SbCftbaKHa0B3j/Z9ky6yzrgY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","name","artist","album","id","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","addTrack","track","existingTracks","find","t","newTrack","concat","console","log","removeTrack","filter","updatePlaylistName","savePlaylist","trackURIs","map","uri","search","term","then","result","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport {Spotify} from '../../util/Spotify/Spotify';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([\n    {\n      name: 'Landed In Brooklyn',\n      artist: 'Khantrast',\n      album: 'Landed In Brooklyn',\n      id: 1\n    },\n    {\n      name: 'The Largest',\n      artist: 'BigXthaPlug',\n      album: 'TAKE CARE',\n      id: 2\n    }]\n  );\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState(\n    [\n      {\n        name: 'Mutt',\n        artist: 'Leon Thomas',\n        album: 'Mutt',\n        id: 3\n      },\n      {\n        name: 'On My Mama',\n        artist: 'Victoria Monét',\n        album: 'On My Mama',\n        id: 4\n      }]\n  );\n\n  const addTrack = (track) => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks){\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n\n  const removeTrack = (track) => {\n    const existingTracks = playlistTracks.filter((t) => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n  }\n\n  const updatePlaylistName = (name) => {\n    setPlaylistName(name);\n  }\n\n  const savePlaylist = () => {\n    const trackURIs = playlistTracks.map((t) => t.uri);\n  }\n\n  const search = (term) => {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term)\n  }\n\n  return (\n    <div>\n      <h1>Ja<span className='highlight'>mmm</span>ing</h1>\n      <div className='App'>\n        {/* <!-- Add search bar component-->  */}\n        <SearchBar onSearch={search}/>\n        <div className='App-playlist'>\n          {/* <!-- Add search results component--> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack}/>\n          {/* <!-- Add Playlist  component--> */}\n          <Playlist \n          playlistName={playlistName} \n          playlistTracks={playlistTracks} \n          onRemove={removeTrack}\n          onNameChange={updatePlaylistName}\n          onSave={savePlaylist}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
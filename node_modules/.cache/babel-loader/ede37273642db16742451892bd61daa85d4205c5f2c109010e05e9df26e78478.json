{"ast":null,"code":"var _jsxFileName = \"/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport { Spotify } from '../../util/Spotify/Spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n  useEffect(() => {\n    const token = Spotify.getAccessToken();\n    if (token) {\n      //Check for access token \n      setAccessToken(token);\n      // Spotify.search('Hire Me ').then(result => setSearchResults(result)); //Performs initial search\n    }\n  }, []);\n  const addTrack = track => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks) {\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  };\n  const removeTrack = track => {\n    const existingTracks = playlistTracks.filter(t => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n  };\n  const updatePlaylistName = name => {\n    setPlaylistName(name);\n  };\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map(t => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      setPlaylistName('New Playlist');\n      setPlaylistTracks([]);\n    });\n  }\n  const search = term => {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        children: \"Jam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), \"ify\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-playlist\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          userSearchResults: searchResults,\n          onAdd: addTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n          playlistName: playlistName,\n          playlistTracks: playlistTracks,\n          onRemove: removeTrack,\n          onNameChange: updatePlaylistName,\n          onSave: savePlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ocd3IwuMBsRaUuZ1WPz6svJBNVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","_s","searchResults","setSearchResults","playlistName","setPlaylistName","playlistTracks","setPlaylistTracks","accessToken","setAccessToken","token","getAccessToken","addTrack","track","existingTracks","find","t","id","newTrack","concat","console","log","removeTrack","filter","updatePlaylistName","name","savePlaylist","trackURIs","map","uri","then","search","term","result","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","userSearchResults","onAdd","onRemove","onNameChange","onSave","_c","$RefreshReg$"],"sources":["/Users/diquankerr/Desktop/Projetcs/jamming/src/components/App/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport {Spotify} from '../../util/Spotify/Spotify';\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [playlistName, setPlaylistName] = useState(\"Example Playlist Name\");\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [accessToken, setAccessToken] = useState('');\n\n  useEffect(() => {\n    const token = Spotify.getAccessToken();\n    if (token) { //Check for access token \n      setAccessToken(token); \n      // Spotify.search('Hire Me ').then(result => setSearchResults(result)); //Performs initial search\n    }\n  }, []);\n\n\n  const addTrack = (track) => {\n    const existingTracks = playlistTracks.find(t => t.id === track.id);\n    const newTrack = playlistTracks.concat(track);\n    if (existingTracks){\n      console.log(\"Track already exists\");\n    } else {\n      setPlaylistTracks(newTrack);\n    }\n  }\n\n  const removeTrack = (track) => {\n    const existingTracks = playlistTracks.filter((t) => t.id !== track.id);\n    setPlaylistTracks(existingTracks);\n  }\n\n  const updatePlaylistName = (name) => {\n    setPlaylistName(name);\n  }\n\n  function savePlaylist() {\n    const trackURIs = playlistTracks.map((t) => t.uri);\n    Spotify.savePlaylist(playlistName, trackURIs).then(() => {\n      setPlaylistName('New Playlist');\n      setPlaylistTracks([]);\n    });\n  }\n\n  const search = (term) => {\n    Spotify.search(term).then(result => setSearchResults(result));\n    console.log(term)\n  }\n\n  return (\n    <div>\n      <h1><span className='highlight'>Jam</span>ify</h1>\n      <div className='App'>\n        {/* <!-- Add search bar component-->  */}\n        <SearchBar onSearch={search}/>\n        <div className='App-playlist'>\n          {/* <!-- Add search results component--> */}\n          <SearchResults userSearchResults={searchResults} onAdd={addTrack}/>\n          {/* <!-- Add Playlist  component--> */}\n          <Playlist \n          playlistName={playlistName} \n          playlistTracks={playlistTracks} \n          onRemove={removeTrack}\n          onNameChange={updatePlaylistName}\n          onSave={savePlaylist}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
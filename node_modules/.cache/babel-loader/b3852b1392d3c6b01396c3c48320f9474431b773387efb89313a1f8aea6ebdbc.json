{"ast":null,"code":"let accessToken;\nconst clientID = 'd1b12a276aef41b4b58625d1d644e9e8';\nconst redirectUrl = \"http://localhost:3000\";\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n    ;\n    const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n    const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n    if (tokenInURL && expiryTime) {\n      accessToken = tokenInURL[1];\n      const expiresIn = Number(expiryTime[1]);\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access token', null, '/');\n      return accessToken;\n    }\n    const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`;\n    window.location = redirect;\n  },\n  search(term) {\n    accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      method: 'Get',\n      headers: {\n        Authorization: `bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(jsonResponse => {\n      if (!jsonResponse) {\n        console.error('Response error');\n      }\n      console.log(accessToken);\n      console.log(jsonResponse);\n      return jsonResponse.tracks.items.map(t => ({\n        id: t.id,\n        name: t.name,\n        artist: t.artist[0].name,\n        album: t.album.name,\n        uri: t.uri\n      }));\n    });\n  }\n};\nexport { Spotify };","map":{"version":3,"names":["accessToken","clientID","redirectUrl","Spotify","getAccessToken","tokenInURL","window","location","href","match","expiryTime","expiresIn","Number","setTimeout","history","pushState","redirect","search","term","fetch","method","headers","Authorization","then","response","json","jsonResponse","console","error","log","tracks","items","map","t","id","name","artist","album","uri"],"sources":["/Users/diquankerr/Desktop/Projetcs/jamming/src/util/Spotify/Spotify.js"],"sourcesContent":["let accessToken;\nconst clientID = 'd1b12a276aef41b4b58625d1d644e9e8';\nconst redirectUrl = \"http://localhost:3000\"\n\nconst Spotify = {\n    getAccessToken() {\n        if (accessToken) {\n            return accessToken\n        };\n        \n        const tokenInURL = window.location.href.match(/access_token=([^&]*)/);\n        const expiryTime = window.location.href.match(/expires_in=([^&]*)/);\n\n        if (tokenInURL && expiryTime) {\n            accessToken = tokenInURL[1];\n            const expiresIn = Number(expiryTime[1]);\n\n            window.setTimeout(() => (accessToken = ''), expiresIn * 1000);\n\n            window.history.pushState('Access token', null, '/');\n            return accessToken;\n        }\n\n        const redirect = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUrl}`\n        window.location = redirect;\n    },\n\n    search(term) {\n        accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            method: 'Get',\n            headers: { Authorization: `bearer ${accessToken}` },\n        })\n        .then(response => response.json())\n        .then(jsonResponse => {\n            if(!jsonResponse){\n                console.error('Response error');\n            }\n            console.log(accessToken)\n            console.log(jsonResponse)\n            return jsonResponse.tracks.items.map(t => ({\n                id: t.id,\n                name: t.name,\n                artist: t.artist[0].name,\n                album: t.album.name,\n                uri: t.uri,\n            }))\n        })\n    },\n};\n\n\n\nexport {Spotify} "],"mappings":"AAAA,IAAIA,WAAW;AACf,MAAMC,QAAQ,GAAG,kCAAkC;AACnD,MAAMC,WAAW,GAAG,uBAAuB;AAE3C,MAAMC,OAAO,GAAG;EACZC,cAAcA,CAAA,EAAG;IACb,IAAIJ,WAAW,EAAE;MACb,OAAOA,WAAW;IACtB;IAAC;IAED,MAAMK,UAAU,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACrE,MAAMC,UAAU,GAAGJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,oBAAoB,CAAC;IAEnE,IAAIJ,UAAU,IAAIK,UAAU,EAAE;MAC1BV,WAAW,GAAGK,UAAU,CAAC,CAAC,CAAC;MAC3B,MAAMM,SAAS,GAAGC,MAAM,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;MAEvCJ,MAAM,CAACO,UAAU,CAAC,MAAOb,WAAW,GAAG,EAAG,EAAEW,SAAS,GAAG,IAAI,CAAC;MAE7DL,MAAM,CAACQ,OAAO,CAACC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,GAAG,CAAC;MACnD,OAAOf,WAAW;IACtB;IAEA,MAAMgB,QAAQ,GAAG,oDAAoDf,QAAQ,kEAAkEC,WAAW,EAAE;IAC5JI,MAAM,CAACC,QAAQ,GAAGS,QAAQ;EAC9B,CAAC;EAEDC,MAAMA,CAACC,IAAI,EAAE;IACTlB,WAAW,GAAGG,OAAO,CAACC,cAAc,CAAC,CAAC;IACtC,OAAOe,KAAK,CAAC,kDAAkDD,IAAI,EAAE,EAAE;MACnEE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUtB,WAAW;MAAG;IACtD,CAAC,CAAC,CACDuB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,YAAY,IAAI;MAClB,IAAG,CAACA,YAAY,EAAC;QACbC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACnC;MACAD,OAAO,CAACE,GAAG,CAAC7B,WAAW,CAAC;MACxB2B,OAAO,CAACE,GAAG,CAACH,YAAY,CAAC;MACzB,OAAOA,YAAY,CAACI,MAAM,CAACC,KAAK,CAACC,GAAG,CAACC,CAAC,KAAK;QACvCC,EAAE,EAAED,CAAC,CAACC,EAAE;QACRC,IAAI,EAAEF,CAAC,CAACE,IAAI;QACZC,MAAM,EAAEH,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,CAACD,IAAI;QACxBE,KAAK,EAAEJ,CAAC,CAACI,KAAK,CAACF,IAAI;QACnBG,GAAG,EAAEL,CAAC,CAACK;MACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN;AACJ,CAAC;AAID,SAAQnC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}